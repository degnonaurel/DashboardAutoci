{"ast":null,"code":"var _jsxFileName = \"/Users/aureldegnon/Downloads/projet_tableau_de_bord_autoci_complet/src/components/LineChartComponent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChartComponent = ({\n  data,\n  selectedBrands\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const marques = [...new Set(data.map(item => item.marque))];\n  const mois = [...new Set(data.map(item => item.mois))];\n  const grouped = mois.map(m => {\n    const row = {\n      mois: m\n    };\n    marques.forEach(marque => {\n      const record = data.find(d => d.mois === m && d.marque === marque);\n      row[marque] = record ? record.nb_exportees : 0;\n    });\n    return row;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t(\"chart2_title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: grouped,\n        margin: {\n          top: 40,\n          right: 30,\n          left: 20,\n          bottom: 60\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), selectedBrands.map((marque, idx) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: marque,\n          stroke: `hsl(${idx * 37 % 360}, 70%, 50%)`,\n          strokeWidth: 2,\n          dot: false\n        }, marque, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChartComponent, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = LineChartComponent;\nexport default LineChartComponent;\nvar _c;\n$RefreshReg$(_c, \"LineChartComponent\");","map":{"version":3,"names":["React","useTranslation","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","LineChartComponent","data","selectedBrands","_s","t","marques","Set","map","item","marque","mois","grouped","m","row","forEach","record","find","d","nb_exportees","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","idx","type","stroke","strokeWidth","dot","_c","$RefreshReg$"],"sources":["/Users/aureldegnon/Downloads/projet_tableau_de_bord_autoci_complet/src/components/LineChartComponent.js"],"sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst LineChartComponent = ({ data, selectedBrands }) => {\n  const { t } = useTranslation();\n  const marques = [...new Set(data.map((item) => item.marque))];\n  const mois = [...new Set(data.map((item) => item.mois))];\n\n  const grouped = mois.map((m) => {\n    const row = { mois: m };\n    marques.forEach((marque) => {\n      const record = data.find((d) => d.mois === m && d.marque === marque);\n      row[marque] = record ? record.nb_exportees : 0;\n    });\n    return row;\n  });\n\n  return (\n    <div>\n      <h2>{t(\"chart2_title\")}</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart data={grouped}  margin={{ top: 40, right: 30, left: 20, bottom: 60 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"mois\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          {selectedBrands.map((marque, idx) => (\n            <Line\n              key={marque}\n              type=\"monotone\"\n              dataKey={marque}\n              stroke={`hsl(${(idx * 37) % 360}, 70%, 50%)`}\n              strokeWidth={2}\n              dot={false}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default LineChartComponent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,SACEC,aAAa,EACbC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,mBAAmB,EACnBC,OAAO,EACPC,KAAK,EACLC,KAAK,QACA,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM;IAAEC;EAAE,CAAC,GAAGf,cAAc,CAAC,CAAC;EAC9B,MAAMgB,OAAO,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC7D,MAAMC,IAAI,GAAG,CAAC,GAAG,IAAIJ,GAAG,CAACL,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;EAExD,MAAMC,OAAO,GAAGD,IAAI,CAACH,GAAG,CAAEK,CAAC,IAAK;IAC9B,MAAMC,GAAG,GAAG;MAAEH,IAAI,EAAEE;IAAE,CAAC;IACvBP,OAAO,CAACS,OAAO,CAAEL,MAAM,IAAK;MAC1B,MAAMM,MAAM,GAAGd,IAAI,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,IAAI,KAAKE,CAAC,IAAIK,CAAC,CAACR,MAAM,KAAKA,MAAM,CAAC;MACpEI,GAAG,CAACJ,MAAM,CAAC,GAAGM,MAAM,GAAGA,MAAM,CAACG,YAAY,GAAG,CAAC;IAChD,CAAC,CAAC;IACF,OAAOL,GAAG;EACZ,CAAC,CAAC;EAEF,oBACEd,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAKf,CAAC,CAAC,cAAc;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BxB,OAAA,CAACL,mBAAmB;MAAC8B,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5CpB,OAAA,CAACN,SAAS;QAACQ,IAAI,EAAEU,OAAQ;QAAEe,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAAX,QAAA,gBAE9EpB,OAAA,CAACT,aAAa;UAACyC,eAAe,EAAC;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCxB,OAAA,CAACH,KAAK;UAACoC,OAAO,EAAC;QAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBxB,OAAA,CAACF,KAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTxB,OAAA,CAACJ,OAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXxB,OAAA,CAACR,MAAM;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACTrB,cAAc,CAACK,GAAG,CAAC,CAACE,MAAM,EAAEwB,GAAG,kBAC9BlC,OAAA,CAACP,IAAI;UAEH0C,IAAI,EAAC,UAAU;UACfF,OAAO,EAAEvB,MAAO;UAChB0B,MAAM,EAAE,OAAQF,GAAG,GAAG,EAAE,GAAI,GAAG,aAAc;UAC7CG,WAAW,EAAE,CAAE;UACfC,GAAG,EAAE;QAAM,GALN5B,MAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvCIH,kBAAkB;EAAA,QACRX,cAAc;AAAA;AAAAiD,EAAA,GADxBtC,kBAAkB;AAyCxB,eAAeA,kBAAkB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}