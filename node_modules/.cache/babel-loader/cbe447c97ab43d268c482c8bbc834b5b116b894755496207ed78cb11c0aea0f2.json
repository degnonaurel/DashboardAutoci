{"ast":null,"code":"var _jsxFileName = \"/Users/aureldegnon/Downloads/projet_tableau_de_bord_autoci_complet/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport BarChartComponent from \"./components/BarChartComponent\";\nimport Filters from \"./components/Filters\";\nimport LanguageSwitcher from \"./components/LanguageSwitcher\";\nimport LineChartComponent from \"./components/LineChartComponent\";\nimport \"./i18n/i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n  const [selectedFuel, setSelectedFuel] = useState(\"\");\n  const [selectedBrands, setSelectedBrands] = useState([]);\n  useEffect(() => {\n    fetch(\"/export_voitures_12mois_10marques.csv\").then(res => res.text()).then(text => {\n      const rows = text.trim().split(\"\\n\").slice(1);\n      const parsed = rows.map(line => {\n        const [mois, marque, type_carburant, nb_exportees, prix_moyen_cad] = line.split(\",\");\n        return {\n          mois,\n          marque,\n          type_carburant,\n          nb_exportees: parseInt(nb_exportees),\n          prix_moyen_cad: parseInt(prix_moyen_cad)\n        };\n      });\n      setData(parsed);\n      setSelectedBrands([...new Set(parsed.map(d => d.marque))]);\n    });\n  }, []);\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Marques \\xE0 afficher : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), Array.from(new Set(data.map(d => d.marque))).map(marque => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginRight: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: marque,\n        checked: selectedBrands.includes(marque),\n        onChange: e => {\n          const checked = e.target.checked;\n          if (checked) {\n            setSelectedBrands([...selectedBrands, marque]);\n          } else {\n            setSelectedBrands(selectedBrands.filter(m => m !== marque));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), marque]\n    }, marque, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n  useEffect(() => {\n    let result = data;\n    if (selectedMonth) result = result.filter(d => d.mois === selectedMonth);\n    if (selectedFuel) result = result.filter(d => d.type_carburant === selectedFuel);\n    setFilteredData(result);\n  }, [data, selectedMonth, selectedFuel]);\n  const moisList = [...new Set(data.map(d => d.mois))];\n  const carburantList = [...new Set(data.map(d => d.type_carburant))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t(\"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      moisList: moisList,\n      carburantList: carburantList,\n      selectedMonth: selectedMonth,\n      setSelectedMonth: setSelectedMonth,\n      selectedFuel: selectedFuel,\n      setSelectedFuel: setSelectedFuel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChartComponent, {\n      data: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChartComponent, {\n      data: data,\n      selectedBrands: selectedBrands\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wtfUdcZcE9SFCoDCxryZRoCXRyA=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useTranslation","BarChartComponent","Filters","LanguageSwitcher","LineChartComponent","jsxDEV","_jsxDEV","App","_s","t","data","setData","filteredData","setFilteredData","selectedMonth","setSelectedMonth","selectedFuel","setSelectedFuel","selectedBrands","setSelectedBrands","fetch","then","res","text","rows","trim","split","slice","parsed","map","line","mois","marque","type_carburant","nb_exportees","prix_moyen_cad","parseInt","Set","d","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","marginRight","type","value","checked","includes","onChange","e","target","filter","m","result","moisList","carburantList","padding","fontFamily","_c","$RefreshReg$"],"sources":["/Users/aureldegnon/Downloads/projet_tableau_de_bord_autoci_complet/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport BarChartComponent from \"./components/BarChartComponent\";\nimport Filters from \"./components/Filters\";\nimport LanguageSwitcher from \"./components/LanguageSwitcher\";\nimport LineChartComponent from \"./components/LineChartComponent\";\nimport \"./i18n/i18n\";\n\nfunction App() {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n  const [selectedFuel, setSelectedFuel] = useState(\"\");\n  const [selectedBrands, setSelectedBrands] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/export_voitures_12mois_10marques.csv\")\n      .then((res) => res.text())\n      .then((text) => {\n        const rows = text.trim().split(\"\\n\").slice(1);\n        \n        const parsed = rows.map((line) => {\n          const [mois, marque, type_carburant, nb_exportees, prix_moyen_cad] = line.split(\",\");\n          \n          return {\n            mois,\n            marque,\n            type_carburant,\n            nb_exportees: parseInt(nb_exportees),\n            prix_moyen_cad: parseInt(prix_moyen_cad),\n          };\n        });\n        setData(parsed);\n        setSelectedBrands([...new Set(parsed.map((d) => d.marque))]);\n      });\n  }, []);\n  <div style={{ marginBottom: \"1rem\" }}>\n  <label>Marques Ã  afficher : </label>\n  {Array.from(new Set(data.map(d => d.marque))).map((marque) => (\n    <label key={marque} style={{ marginRight: \"10px\" }}>\n      <input\n        type=\"checkbox\"\n        value={marque}\n        checked={selectedBrands.includes(marque)}\n        onChange={(e) => {\n          const checked = e.target.checked;\n          if (checked) {\n            setSelectedBrands([...selectedBrands, marque]);\n          } else {\n            setSelectedBrands(selectedBrands.filter((m) => m !== marque));\n          }\n        }}\n      />\n      {marque}\n    </label>\n  ))}\n</div>\n  useEffect(() => {\n    let result = data;\n    if (selectedMonth) result = result.filter((d) => d.mois === selectedMonth);\n    if (selectedFuel) result = result.filter((d) => d.type_carburant === selectedFuel);\n    setFilteredData(result);\n  }, [data, selectedMonth, selectedFuel]);\n\n  const moisList = [...new Set(data.map((d) => d.mois))];\n  const carburantList = [...new Set(data.map((d) => d.type_carburant))];\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>{t(\"title\")}</h1>\n      <LanguageSwitcher />\n      <Filters\n        moisList={moisList}\n        carburantList={carburantList}\n        selectedMonth={selectedMonth}\n        setSelectedMonth={setSelectedMonth}\n        selectedFuel={selectedFuel}\n        setSelectedFuel={setSelectedFuel}\n      />\n      <BarChartComponent data={filteredData} />\n      <LineChartComponent data={data} selectedBrands={selectedBrands} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}