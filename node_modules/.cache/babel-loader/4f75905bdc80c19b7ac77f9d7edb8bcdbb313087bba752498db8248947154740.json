{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useTranslation}from\"react-i18next\";import BarChartComponent from\"./components/BarChartComponent\";import Filters from\"./components/Filters\";import LanguageSwitcher from\"./components/LanguageSwitcher\";import LineChartComponent from\"./components/LineChartComponent\";import\"./i18n/i18n\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const{t}=useTranslation();const[data,setData]=useState([]);const[filteredData,setFilteredData]=useState([]);const[selectedMonth,setSelectedMonth]=useState(\"\");const[selectedFuel,setSelectedFuel]=useState(\"\");const[selectedBrands,setSelectedBrands]=useState([]);useEffect(()=>{fetch(\"/export_voitures_12mois_10marques.csv\").then(res=>res.text()).then(text=>{const rows=text.trim().split(\"\\n\").slice(1);const parsed=rows.map(line=>{const[mois,marque,type_carburant,nb_exportees,prix_moyen_cad]=line.split(\",\");return{mois,marque,type_carburant,nb_exportees:parseInt(nb_exportees),prix_moyen_cad:parseInt(prix_moyen_cad)};});setData(parsed);setSelectedBrands([...new Set(parsed.map(d=>d.marque))]);});},[]);useEffect(()=>{let result=data;if(selectedMonth)result=result.filter(d=>d.mois===selectedMonth);if(selectedFuel)result=result.filter(d=>d.type_carburant===selectedFuel);setFilteredData(result);},[data,selectedMonth,selectedFuel]);const moisList=[...new Set(data.map(d=>d.mois))];const carburantList=[...new Set(data.map(d=>d.type_carburant))];return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"2rem\",fontFamily:\"sans-serif\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:t(\"title\")}),/*#__PURE__*/_jsx(LanguageSwitcher,{}),/*#__PURE__*/_jsx(Filters,{moisList:moisList,carburantList:carburantList,selectedMonth:selectedMonth,setSelectedMonth:setSelectedMonth,selectedFuel:selectedFuel,setSelectedFuel:setSelectedFuel}),/*#__PURE__*/_jsx(BarChartComponent,{data:filteredData}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:\"2rem 0\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:t(\"select_brands\")||\"Marques Ã  afficher :\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"0.5rem\"},children:Array.from(new Set(data.map(d=>d.marque))).map(marque=>/*#__PURE__*/_jsxs(\"label\",{style:{marginRight:\"1rem\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:marque,checked:selectedBrands.includes(marque),onChange:e=>{const checked=e.target.checked;if(checked){setSelectedBrands([...selectedBrands,marque]);}else{setSelectedBrands(selectedBrands.filter(m=>m!==marque));}}}),\" \"+marque]},marque))})]}),/*#__PURE__*/_jsx(LineChartComponent,{data:data,selectedBrands:selectedBrands})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","BarChartComponent","Filters","LanguageSwitcher","LineChartComponent","jsx","_jsx","jsxs","_jsxs","App","t","data","setData","filteredData","setFilteredData","selectedMonth","setSelectedMonth","selectedFuel","setSelectedFuel","selectedBrands","setSelectedBrands","fetch","then","res","text","rows","trim","split","slice","parsed","map","line","mois","marque","type_carburant","nb_exportees","prix_moyen_cad","parseInt","Set","d","result","filter","moisList","carburantList","style","padding","fontFamily","children","margin","marginTop","Array","from","marginRight","type","value","checked","includes","onChange","e","target","m"],"sources":["/Users/aureldegnon/Downloads/projet_tableau_de_bord_autoci_complet/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport BarChartComponent from \"./components/BarChartComponent\";\nimport Filters from \"./components/Filters\";\nimport LanguageSwitcher from \"./components/LanguageSwitcher\";\nimport LineChartComponent from \"./components/LineChartComponent\";\nimport \"./i18n/i18n\";\n\nfunction App() {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n  const [selectedFuel, setSelectedFuel] = useState(\"\");\n  const [selectedBrands, setSelectedBrands] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/export_voitures_12mois_10marques.csv\")\n      .then((res) => res.text())\n      .then((text) => {\n        const rows = text.trim().split(\"\\n\").slice(1);\n\n        const parsed = rows.map((line) => {\n          const [mois, marque, type_carburant, nb_exportees, prix_moyen_cad] = line.split(\",\");\n          return {\n            mois,\n            marque,\n            type_carburant,\n            nb_exportees: parseInt(nb_exportees),\n            prix_moyen_cad: parseInt(prix_moyen_cad),\n          };\n        });\n\n        setData(parsed);\n        setSelectedBrands([...new Set(parsed.map((d) => d.marque))]);\n      });\n  }, []);\n\n  useEffect(() => {\n    let result = data;\n    if (selectedMonth) result = result.filter((d) => d.mois === selectedMonth);\n    if (selectedFuel) result = result.filter((d) => d.type_carburant === selectedFuel);\n    setFilteredData(result);\n  }, [data, selectedMonth, selectedFuel]);\n\n  const moisList = [...new Set(data.map((d) => d.mois))];\n  const carburantList = [...new Set(data.map((d) => d.type_carburant))];\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>{t(\"title\")}</h1>\n      <LanguageSwitcher />\n      <Filters\n        moisList={moisList}\n        carburantList={carburantList}\n        selectedMonth={selectedMonth}\n        setSelectedMonth={setSelectedMonth}\n        selectedFuel={selectedFuel}\n        setSelectedFuel={setSelectedFuel}\n      />\n      <BarChartComponent data={filteredData} />\n\n      {/* ðŸŽ¯ Filtre de marques pour le graphe en lignes */}\n      <div style={{ margin: \"2rem 0\" }}>\n        <strong>{t(\"select_brands\") || \"Marques Ã  afficher :\"}</strong>\n        <div style={{ marginTop: \"0.5rem\" }}>\n          {Array.from(new Set(data.map((d) => d.marque))).map((marque) => (\n            <label key={marque} style={{ marginRight: \"1rem\" }}>\n              <input\n                type=\"checkbox\"\n                value={marque}\n                checked={selectedBrands.includes(marque)}\n                onChange={(e) => {\n                  const checked = e.target.checked;\n                  if (checked) {\n                    setSelectedBrands([...selectedBrands, marque]);\n                  } else {\n                    setSelectedBrands(selectedBrands.filter((m) => m !== marque));\n                  }\n                }}\n              />\n              {\" \" + marque}\n            </label>\n          ))}\n        </div>\n      </div>\n\n      <LineChartComponent data={data} selectedBrands={selectedBrands} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}